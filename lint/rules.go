// Generated by go generate; DO NOT EDIT.

package lint

var rules = map[string]*RuleInfo{
	"control-empty": {
		Tag:   "control-empty",
		Level: LevelError,
		Description: `
Recipe control must not be empty.
`,
	},
	"control-description-empty": {
		Tag:   "control-description-empty",
		Level: LevelError,
		Description: `
Recipe control description must not be empty.
`,
	},
	"description-empty": {
		Tag:   "description-empty",
		Level: LevelError,
		Description: `
Recipe description must not be empty.
`,
	},
	"description-extra-dot": {
		Tag:   "description-extra-dot",
		Level: LevelWarning,
		Description: `
Recipe description should not end with a dot.
`,
	},
	"description-missing-uppercase": {
		Tag:   "description-missing-uppercase",
		Level: LevelWarning,
		Description: `
Recipe description should start with an uppercase character.
`,
	},
	"description-too-long": {
		Tag:   "description-too-long",
		Level: LevelWarning,
		Description: `
Recipe description should be kept short for readability's sake.
`,
	},
	"dirs-path-relative": {
		Tag:   "dirs-path-relative",
		Level: LevelError,
		Description: `
Recipe directories must be absolute paths.
`,
	},
	"homepage-empty": {
		Tag:   "homepage-empty",
		Level: LevelWarning,
		Description: `
Recipe homepage should not be empty.
`,
	},
	"homepage-invalid": {
		Tag:   "homepage-invalid",
		Level: LevelError,
		Description: `
Recipe homepage must be a valid URL, including a scheme.

Example: https://example.net/
`,
	},
	"install-empty": {
		Tag:   "install-empty",
		Level: LevelError,
		Description: `
Recipe install must not be empty.
`,
	},
	"install-destination-relative": {
		Tag:   "install-destination-relative",
		Level: LevelError,
		Description: `
Recipe install destination must be an absolute path.
`,
	},
	"install-rule-conffile-outside-etc": {
		Tag:   "install-rule-conffile-outside-etc",
		Level: LevelWarning,
		Description: `
Recipe install rule conffile should point to a file located in /etc.
`,
	},
	"install-rule-empty": {
		Tag:   "install-rule-empty",
		Level: LevelError,
		Description: `
Recipe install rule must not be empty.
`,
	},
	"install-rule-pattern-empty": {
		Tag:   "install-rule-pattern-empty",
		Level: LevelError,
		Description: `
Recipe install rule pattern must not be empty.
`,
	},
	"install-rule-rename-duplicate": {
		Tag:   "install-rule-rename-duplicate",
		Level: LevelError,
		Description: `
Recipe install rule rename property must be unique.
`,
	},
	"install-upstream-empty": {
		Tag:   "install-upstream-empty",
		Level: LevelError,
		Description: `
Recipe upstream install map must not be empty.
`,
	},
	"links-destination-relative": {
		Tag:   "links-destination-relative",
		Level: LevelError,
		Description: `
Recipe links destinations must be absolute paths.
`,
	},
	"links-source-relative": {
		Tag:   "links-source-relative",
		Level: LevelError,
		Description: `
Recipe links sources must be absolute paths.
`,
	},
	"maintainer-empty": {
		Tag:   "maintainer-empty",
		Level: LevelError,
		Description: `
Recipe maintainer must not be empty.
`,
	},
	"maintainer-invalid": {
		Tag:   "maintainer-invalid",
		Level: LevelError,
		Description: `
Recipe maintainer must be a single RFC 5322 address, e.g. "Foo Bar <foo@example.org>".
`,
	},
	"name-empty": {
		Tag:   "name-empty",
		Level: LevelError,
		Description: `
Recipe name must not be empty.
`,
	},
	"name-invalid": {
		Tag:   "name-invalid",
		Level: LevelError,
		Description: `
Recipe name must be lowercase and consist of letters, digits and hyphens.

Hyphens are only permitted within the name, therefore it must not start or end with an hyphen.
`,
	},
	"name-too-long": {
		Tag:   "name-too-long",
		Level: LevelWarning,
		Description: `
Recipe name should be kept short for readability's sake.
`,
	},
	"source-empty": {
		Tag:   "source-empty",
		Level: LevelError,
		Description: `
Recipe source must not be empty.
`,
	},
	"source-strip-invalid": {
		Tag:   "source-strip-invalid",
		Level: LevelError,
		Description: `
Recipe source strip value must be greater than or equal to 0.

If N is greater than zero, it will strip N leading components from files names present in upstream archives.

Default: archive
`,
	},
	"source-type-invalid": {
		Tag:   "source-type-invalid",
		Level: LevelError,
		Description: `
Recipe source type must be a valid source type.

Currently supported source types are "archive" and "file".

Default: archive
`,
	},
	"source-url-empty": {
		Tag:   "source-url-empty",
		Level: LevelError,
		Description: `
Recipe source URL must not be empty.
`,
	},
	"source-url-invalid": {
		Tag:   "source-url-invalid",
		Level: LevelError,
		Description: `
Recipe source URL must be a valid URL, including a scheme. It may use template variables.

Example: https://example.net/foo-{{ .Version }}_{{ .Arch }}.tar.gz
`,
	},
	"version-unsupported": {
		Tag:   "version-unsupported",
		Level: LevelError,
		Description: `
Recipe version must be a valid supported version.

Currently supported version is 1.
`,
	},
}
